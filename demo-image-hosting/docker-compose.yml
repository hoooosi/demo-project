version: "3.8"

services:
  # PostgreSQL 数据库
  postgres:
    container_name: image-hosting-postgres
    image: postgres:14
    restart: always
    shm_size: 128mb
    ports:
      - "5432:5432"
    volumes:
      - "./!docker/data/postgres:/var/lib/postgresql/data"
      - "./!docs/sql:/docker-entrypoint-initdb.d"
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: simple_picture
    networks:
      - image-hosting-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 缓存
  redis:
    container_name: image-hosting-redis
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - "./!docker/config/redis.conf:/usr/local/etc/redis/redis.conf"
      - "./!docker/data/redis:/data"
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - image-hosting-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO 对象存储
  minio:
    container_name: image-hosting-minio
    image: minio/minio:latest
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - "./!docker/data/minio/data:/data"
      - "./!docker/data/minio/events:/tmp/minio-events"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    networks:
      - image-hosting-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Nacos 服务注册与配置中心
  nacos:
    container_name: image-hosting-nacos
    image: nacos/nacos-server:v2.3.0
    restart: always
    ports:
      - "8848:8848"
      - "9848:9848"
    volumes:
      - "./!docker/data/nacos/logs:/home/nacos/logs"
      - "./!docker/data/nacos/data:/home/nacos/data"
    environment:
      MODE: standalone
      PREFER_HOST_MODE: hostname
      SPRING_DATASOURCE_PLATFORM: mysql
      JVM_XMS: 512m
      JVM_XMX: 512m
      JVM_XMN: 256m
    networks:
      - image-hosting-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8848/nacos/"]
      interval: 30s
      timeout: 10s
      retries: 5

  # RocketMQ 消息队列
  rocketmq-dashboard:
    image: apacherocketmq/rocketmq-dashboard:latest
    container_name: rocket-dashboard
    ports:
      - "8082:8082"
    environment:
      - JAVA_OPTS=-Drocketmq.namesrv.addr=namesrv:9876

  namesrv:
    image: apache/rocketmq:5.3.2
    container_name: namesrv
    ports:
      - "9876:9876"
    volumes:
      - "./!docker/data/namesrv/logs:/home/rocketmq/logs"
      - "./!docker/data/namesrv/store:/home/rocketmq/store"
    command: sh mqnamesrv

  broker:
    image: apache/rocketmq:5.3.2
    container_name: broker
    user: root
    ports:
      - "10909:10909"
      - "10911:10911"
      - "10912:10912"
    volumes:
      - "./!docker/data/broker/logs:/root/logs"
      - "./!docker/data/broker/store:/root/store"
      - "./!docker/config/broker.conf:/home/rocketmq/cfg/broker.conf"
    environment:
      - JAVA_OPTS=-server -Xms512m -Xmx512m -Xmn256m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=128m
    command: sh mqbroker -c /home/rocketmq/cfg/broker.conf
    restart: always
    depends_on:
      - namesrv

networks:
  image-hosting-network:
    driver: bridge
